"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[314],{4146:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>i});var t=r(7462),l=(r(7294),r(3905));const n={sidebar_position:2},d="Hello World",s={unversionedId:"hello-world",id:"hello-world",title:"Hello World",description:"",source:"@site/docs/hello-world.md",sourceDirName:".",slug:"/hello-world",permalink:"/docs/hello-world",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/hello-world.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Learn ESP32",permalink:"/docs/intro"}},a={},i=[],u={toc:i},c="wrapper";function p(e){let{components:o,...r}=e;return(0,l.kt)(c,(0,t.Z)({},u,r,{components:o,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"hello-world"},"Hello World"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'\n#include <Arduino.h>\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  Serial.println("Hello World");\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n')))}p.isMDXComponent=!0}}]);